{"version":3,"sources":["Components/Redux/types.js","Components/Redux/weatherLocationReducer.js","Components/Redux/selectReducer.js","Components/Redux/weatherReducer.js","Components/Redux/rootReducer.js","Components/Redux/actions.js","Components/LoaderExample/LoaderExample.js","Components/WeatherContainer/WeatherContainer.js","Components/BackButton/BackButton.js","Components/SelectExample/index.js","Components/WeatherLocation/index.js","Components/WeatherDetails/index.js","App.js","index.js"],"names":["GET_WEATHER","GET_WEATHER_LOCATION","SELECT_SELECTED","INIT_STATE","weather","isLoadWeatherLocation","select","value","text","isLoadWeather","rootReducer","combineReducers","weatherLocation","state","action","type","payload","selectSelector","LoaderExample","className","Loader","active","inline","WeatherContainer","backButton","name","Math","round","main","temp","description","BackButton","history","useHistory","onClick","goBack","Icon","size","color","inverted","connect","props","Dropdown","placeholder","fluid","search","selection","options","onChange","e","push","getWeatherLocation","dispatch","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","response","ok","Error","statusText","json","data","console","log","useEffect","mapDispatchToProps","getWeather","url","fetchData","params","useParams","id","App","exact","path","component","WeatherLocation","WeatherDetails","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5ad9295.chunk.js","sourcesContent":["export const GET_WEATHER = \"GET_WEATHER\"\nexport const GET_WEATHER_LOCATION = \"GET_WEATHER_LOCATION\"\nexport const SELECT_SELECTED = \"SELECT_SELECTED\"\n","import { GET_WEATHER_LOCATION } from \"./types\"\n\nconst INIT_STATE = {\n  weather: {},\n  isLoadWeatherLocation: false,\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const weatherLocationReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_WEATHER_LOCATION:\n      return {\n        ...state,\n        weather: action.payload,\n        isLoadWeatherLocation: true,\n      }\n    default:\n      return state\n  }\n}\n","import { SELECT_SELECTED } from \"./types\"\n\nconst INIT_STATE = {\n  select: [\n    { value: \"kiev\", text: \"Киев\" },\n    { value: \"kharkov\", text: \"Харьков\" },\n    { value: \"odessa\", text: \"Одесса\" },\n    { value: \"dnepr\", text: \"Днепр\" },\n    { value: \"zaporizhzhia\", text: \"Запорожье\" },\n    { value: \"lvov\", text: \"Львов\" },\n    { value: \"doneck\", text: \"Донецк\" },\n    { value: \"Kryvyi Rih\", text: \"Кривой Рог\" },\n    { value: \"sevastopol\", text: \"Севастополь\" },\n    { value: \"mariupol\", text: \"Мариуполь\" },\n    { value: \"luhansk\", text: \"Луганск\" },\n    { value: \"vinitsa\", text: \"Винница\" },\n    { value: \"kherson\", text: \"Херсон\" },\n  ],\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const selectReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case SELECT_SELECTED:\n      return {\n        ...state,\n      }\n    default:\n      return state\n  }\n}\n","import { GET_WEATHER } from \"./types\"\n\nconst INIT_STATE = {\n  weather: {},\n  isLoadWeather: false,\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const weatherReducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_WEATHER:\n      return {\n        ...state,\n        weather: action.payload,\n        isLoadWeather: true,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from \"redux\"\nimport { weatherLocationReducer } from \"./weatherLocationReducer\"\n// eslint-disable-next-line import/named\nimport { selectReducer } from \"./selectReducer\"\nimport { weatherReducer } from \"./weatherReducer\"\n\n// eslint-disable-next-line import/prefer-default-export\nexport const rootReducer = combineReducers({\n  weatherLocation: weatherLocationReducer,\n  weather: weatherReducer,\n  select: selectReducer,\n})\n","import { GET_WEATHER, GET_WEATHER_LOCATION, SELECT_SELECTED } from \"./types\"\n\nexport function fetchData(data) {\n  return {\n    type: GET_WEATHER,\n    payload: data,\n  }\n}\n\nexport function getWeather(url) {\n  return (dispatch) => {\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(response.statusText)\n        }\n        return response\n      })\n      .then((response) => response.json())\n      .then((data) => dispatch(fetchData(data)))\n  }\n}\n\nexport function getWeatherLocation() {\n  return (dispatch) => {\n    const { geolocation } = navigator\n    geolocation.getCurrentPosition((position) => {\n      const { latitude, longitude } = position.coords\n      fetch(\n        `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&lang=ru&units=metric&appid=6953836598f1a03d32ed677f25c7eb6d`\n      )\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error(response.statusText)\n          }\n          return response\n        })\n        .then((response) => response.json())\n        .then((data) =>\n          dispatch({\n            type: GET_WEATHER_LOCATION,\n            payload: data,\n          })\n        )\n    })\n  }\n}\n\nexport function selectSelector() {\n  return {\n    type: SELECT_SELECTED,\n  }\n}\n","import React from \"react\"\nimport { Loader } from \"semantic-ui-react\"\nimport \"./loader.scss\"\n\nconst LoaderExample = () => (\n  <div className=\"loader\">\n    <Loader active inline=\"centered\" />\n  </div>\n)\n\nexport default LoaderExample\n","import React from \"react\"\nimport \"./weather-container.scss\"\nimport { BackButton } from \"../index\"\n\nconst WeatherContainer = ({ weather, backButton }) => (\n  <div className=\"weather\">\n    <div className=\"weather__container\">\n      {backButton ? <BackButton /> : null}\n      <div className=\"weather__city\">\n        {weather.name} <i className=\"location arrow icon\" />\n      </div>\n      <div className=\"weather__temp\">{Math.round(weather.main.temp)}°</div>\n      <div className=\"weather__description\">\n        {weather.weather[0].description}\n      </div>\n    </div>\n  </div>\n)\n\nexport default WeatherContainer\n","import React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { Icon } from \"semantic-ui-react\"\nimport \"./backButton.scss\"\n\nconst BackButton = () => {\n  const history = useHistory()\n  return (\n    <button\n      className=\"back-button\"\n      type=\"button\"\n      onClick={() => history.goBack()}\n    >\n      <Icon\n        name=\"arrow alternate circle left outline\"\n        size=\"big\"\n        color=\"white\"\n        inverted\n      />\n    </button>\n  )\n}\n\nexport default BackButton\n","import React from \"react\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport { useHistory } from \"react-router-dom\"\nimport { Dropdown } from \"semantic-ui-react\"\nimport { connect } from \"react-redux\"\nimport { selectSelector } from \"../Redux/actions\"\n\nconst SelectExample = (props) => {\n  const { state } = props\n  const history = useHistory()\n  const handleOnChange = (e, { value }) => {\n    selectSelector()\n    history.push(`/details/${value}`)\n  }\n  return (\n    <Dropdown\n      placeholder=\"Выберите город\"\n      fluid\n      search\n      selection\n      options={state.select.select}\n      onChange={handleOnChange}\n    />\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  state,\n})\n\nexport default connect(mapStateToProps, { selectSelector })(SelectExample)\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { getWeatherLocation } from \"../Redux/actions\"\nimport { LoaderExample, WeatherContainer } from \"../index\"\nimport \"./weatherLocation.scss\"\nimport SelectItem from \"../SelectExample\"\n\n// eslint-disable-next-line no-shadow\nconst WeatherLocation = ({ getWeatherLocation, state }) => {\n  console.log(state)\n  useEffect(() => {\n    getWeatherLocation()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const { isLoadWeatherLocation, weather } = state\n  return (\n    <div className=\"weather\">\n      {isLoadWeatherLocation ? (\n        <div>\n          <WeatherContainer weather={weather} />\n          <SelectItem />\n        </div>\n      ) : (\n        <LoaderExample />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  state: state.weatherLocation,\n})\n\nexport default connect(mapStateToProps, { getWeatherLocation })(WeatherLocation)\n","import React, { useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { getWeather } from \"../Redux/actions\"\nimport { LoaderExample, WeatherContainer } from \"../index\"\n\n// eslint-disable-next-line no-shadow\nconst WeatherDetails = ({ state, getWeather }) => {\n  const params = useParams()\n  useEffect(() => {\n    getWeather(\n      `http://api.openweathermap.org/data/2.5/weather?q=${params.id}&lang=ru&units=metric&appid=6953836598f1a03d32ed677f25c7eb6d`\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  const { isLoadWeather, weather } = state\n  console.log(weather)\n  return (\n    <div className=\"weather\">\n      {isLoadWeather ? (\n        <WeatherContainer weather={weather} backButton />\n      ) : (\n        <LoaderExample />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  state: state.weather,\n})\n\nconst mapDispatchToProps = {\n  getWeather,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherDetails)\n","import React from \"react\"\nimport { Route } from \"react-router-dom\"\nimport WeatherLocation from \"./Components/WeatherLocation\"\nimport \"./app.scss\"\nimport WeatherDetails from \"./Components/WeatherDetails\"\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"app__container\">\n      <div className=\"app__block\">\n        <Route exact path=\"/\" component={WeatherLocation} />\n        <Route exact path=\"/details/:id\" component={WeatherDetails} />\n      </div>\n    </div>\n  </div>\n)\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport { rootReducer } from \"./Components/Redux/rootReducer\"\nimport App from \"./App\"\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}